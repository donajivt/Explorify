#  CI/CD para Explorify.Api.Publications
name: Publications API - CI/CD Pipeline

#  CuÃ¡ndo se ejecuta
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'Backend/Explorify.Api.Publications/**'
      - '.github/workflows/**'
  
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'Backend/Explorify.Api.Publications/**'
  
  workflow_dispatch: #  Permite ejecutar manualmente desde GitHub Actions

#  Variables globales
env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: 'Backend/Explorify.Api.Publications'
  SOLUTION_FILE: 'Explorify.Api.Publications.sln'
  BUILD_CONFIGURATION: 'Release'

jobs:

  build:
    name: ðŸ”§ Build and Test
    runs-on: ubuntu-latest

    steps:
      #  Descargar el repositorio
      - uses: actions/checkout@v4
        
      #  Instalar .NET 9
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      #  Cache NuGet
      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      #  Restaurar dependencias
      - run: dotnet restore ${{ env.SOLUTION_FILE }}
        working-directory: ${{ env.PROJECT_PATH }}

      #  Build del solution completo
      - run: dotnet build ${{ env.SOLUTION_FILE }} -c ${{ env.BUILD_CONFIGURATION }} --no-restore
        working-directory: ${{ env.PROJECT_PATH }}

      #  Ejecutar pruebas (si despuÃ©s incluyes proyectos de test, se ajustarÃ¡)
      - run: dotnet test ${{ env.SOLUTION_FILE }} --no-build --verbosity normal
        working-directory: ${{ env.PROJECT_PATH }}
        continue-on-error: true

      # Publicar artefacto compilado
      - run: dotnet publish Explorify.Api.Publications.csproj -c ${{ env.BUILD_CONFIGURATION }} -o ./publish --no-build
        working-directory: ${{ env.PROJECT_PATH }}

      #  Subir build a Actions
      - uses: actions/upload-artifact@v4
        with:
          name: publications-api-build
          path: ${{ env.PROJECT_PATH }}/publish
          retention-days: 7

  docker-build:
    name:  Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      # âœ… Login a GitHub Container Registry
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # âœ… Datos de la imagen
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/explorify-publications-api
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # âœ… Build y Push de la imagen Docker
      - uses: docker/build-push-action@v5
        with:
          context: Backend/Explorify.Api.Publications
          file: Backend/Explorify.Api.Publications/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
